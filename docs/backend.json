{
  "entities": {
    "Product": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Product",
      "type": "object",
      "description": "Represents a product listed on MongoMarket.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Product entity."
        },
        "supplierId": {
          "type": "string",
          "description": "Reference to the Supplier who listed the product. (Relationship: Supplier 1:N Product)"
        },
        "name": {
          "type": "string",
          "description": "Name of the product."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the product."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the product image.",
          "format": "uri"
        },
        "price": {
          "type": "number",
          "description": "Price of the product."
        },
        "category": {
          "type": "string",
          "description": "Category the product belongs to."
        }
      },
      "required": [
        "id",
        "supplierId",
        "name",
        "description",
        "imageUrl",
        "price",
        "category"
      ]
    },
    "Supplier": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Supplier",
      "type": "object",
      "description": "Represents a supplier listing products on MongoMarket.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Supplier entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the supplier."
        },
        "contactEmail": {
          "type": "string",
          "description": "Email address of the supplier.",
          "format": "email"
        },
        "contactPhone": {
          "type": "string",
          "description": "Phone number of the supplier."
        }
      },
      "required": [
        "id",
        "name",
        "contactEmail",
        "contactPhone"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the MongoMarket application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "firstName": {
          "type": "string",
          "description": "First name of the user."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the user."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "address": {
          "type": "string",
          "description": "Address of the user."
        },
        "paymentMethods": {
          "type": "array",
          "description": "Payment methods associated with the user.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "firstName",
        "lastName",
        "email",
        "address",
        "paymentMethods"
      ]
    },
    "Order": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Order",
      "type": "object",
      "description": "Represents an order placed by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Order entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who placed the order. (Relationship: User 1:N Order)"
        },
        "orderDate": {
          "type": "string",
          "description": "Date and time the order was placed.",
          "format": "date-time"
        },
        "totalAmount": {
          "type": "number",
          "description": "Total amount of the order."
        },
        "status": {
          "type": "string",
          "description": "Current status of the order (e.g., pending, processing, shipped, delivered)."
        },
        "orderItems": {
          "type": "array",
          "description": "Reference to OrderItem. (Relationship: Order 1:N OrderItem)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "userId",
        "orderDate",
        "totalAmount",
        "status",
        "orderItems"
      ]
    },
    "OrderItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "OrderItem",
      "type": "object",
      "description": "Represents an item within an order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the OrderItem entity."
        },
        "orderId": {
          "type": "string",
          "description": "Reference to the Order this item belongs to. (Relationship: Order 1:N OrderItem)"
        },
        "productId": {
          "type": "string",
          "description": "Reference to the Product being ordered. (Relationship: Product 1:N OrderItem)"
        },
        "quantity": {
          "type": "number",
          "description": "Quantity of the product ordered."
        },
        "itemPrice": {
          "type": "number",
          "description": "Price of the item at the time of the order."
        }
      },
      "required": [
        "id",
        "orderId",
        "productId",
        "quantity",
        "itemPrice"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/suppliers/{supplierId}",
        "definition": {
          "entityName": "Supplier",
          "schema": {
            "$ref": "#/backend/entities/Supplier"
          },
          "description": "Stores supplier profiles. Each document represents a supplier listing products on MongoMarket.",
          "params": [
            {
              "name": "supplierId",
              "description": "Unique identifier for the supplier."
            }
          ]
        }
      },
      {
        "path": "/suppliers/{supplierId}/products/{productId}",
        "definition": {
          "entityName": "Product",
          "schema": {
            "$ref": "#/backend/entities/Product"
          },
          "description": "Stores products listed by suppliers.  Implicitly owned by the Supplier via path.  Authorization is implicit.",
          "params": [
            {
              "name": "supplierId",
              "description": "Unique identifier for the supplier."
            },
            {
              "name": "productId",
              "description": "Unique identifier for the product."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles.  Authorization via path.",
          "params": [
            {
              "name": "userId",
              "description": "Unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/orders/{orderId}",
        "definition": {
          "entityName": "Order",
          "schema": {
            "$ref": "#/backend/entities/Order"
          },
          "description": "Stores orders placed by users. Authorization via path.",
          "params": [
            {
              "name": "userId",
              "description": "Unique identifier for the user."
            },
            {
              "name": "orderId",
              "description": "Unique identifier for the order."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/orders/{orderId}/orderItems/{orderItemId}",
        "definition": {
          "entityName": "OrderItem",
          "schema": {
            "$ref": "#/backend/entities/OrderItem"
          },
          "description": "Stores items within an order. Authorization via path.",
          "params": [
            {
              "name": "userId",
              "description": "Unique identifier for the user."
            },
            {
              "name": "orderId",
              "description": "Unique identifier for the order."
            },
            {
              "name": "orderItemId",
              "description": "Unique identifier for the order item."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to support MongoMarket's core features, focusing on product listing, search, orders, and user management. It prioritizes authorization independence and efficient data retrieval.\n\n*   **Suppliers and Products:** Suppliers and their products are structured using hierarchical paths (`/suppliers/{supplierId}/products/{productId}`). This structure simplifies security rules based on supplier ownership of products. Authorization Independence is achieved implicitly as access to products requires knowing the supplierId.\n*   **Users and Orders:**  Orders are stored in a subcollection of users (`/users/{userId}/orders/{orderId}`), making it easy to fetch a user's order history. This also provides authorization independence. The structure enables secure `list` operations for a user's own orders.\n*   **OrderItems:** OrderItems are nested under Orders (`/users/{userId}/orders/{orderId}/orderItems/{orderItemId}`). This is consistent with the hierarchical approach for user-owned data.\n\nThis design facilitates simple and robust security rules, aligning with the core principles of authorization independence, clarity of intent, and prevention of rules as filters."
  }
}